"""create product tables

Revision ID: 30b0abbbce5c
Revises: 0fe14e75d90c
Create Date: 2025-10-29 15:28:54.712143

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = '30b0abbbce5c'
down_revision = '0fe14e75d90c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('normalized_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category', sa.Enum('FRUITS', 'VEGETABLES', 'DAIRY', 'MEAT_FISH', 'BAKERY', 'PANTRY', 'BEVERAGES', 'SNACKS', 'FROZEN', 'HOUSEHOLD', 'PERSONAL_CARE', 'OTHER', name='productcategory'), nullable=False),
    sa.Column('brand', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('barcode', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('calories_per_100g', sa.Float(), nullable=True),
    sa.Column('protein_per_100g', sa.Float(), nullable=True),
    sa.Column('carbs_per_100g', sa.Float(), nullable=True),
    sa.Column('fat_per_100g', sa.Float(), nullable=True),
    sa.Column('fiber_per_100g', sa.Float(), nullable=True),
    sa.Column('sugar_per_100g', sa.Float(), nullable=True),
    sa.Column('sodium_per_100g', sa.Float(), nullable=True),
    sa.Column('typical_unit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('typical_weight_g', sa.Float(), nullable=True),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_organic', sa.Boolean(), nullable=False),
    sa.Column('is_vegan', sa.Boolean(), nullable=False),
    sa.Column('is_vegetarian', sa.Boolean(), nullable=False),
    sa.Column('is_gluten_free', sa.Boolean(), nullable=False),
    sa.Column('data_source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_product_barcode'), 'product', ['barcode'], unique=False)
    op.create_index(op.f('ix_product_name'), 'product', ['name'], unique=False)
    op.create_index(op.f('ix_product_normalized_name'), 'product', ['normalized_name'], unique=False)
    op.create_table('productalias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('alias_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('normalized_alias', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('store_specific', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_productalias_alias_name'), 'productalias', ['alias_name'], unique=False)
    op.create_index(op.f('ix_productalias_normalized_alias'), 'productalias', ['normalized_alias'], unique=False)
    op.create_index(op.f('ix_productalias_product_id'), 'productalias', ['product_id'], unique=False)
    op.create_table('productpurchase',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('extracted_data_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('receipt_item_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('unit_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('match_confidence', sa.Float(), nullable=False),
    sa.Column('is_manual_match', sa.Boolean(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['extracted_data_id'], ['extracteddata.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_productpurchase_extracted_data_id'), 'productpurchase', ['extracted_data_id'], unique=False)
    op.create_index(op.f('ix_productpurchase_product_id'), 'productpurchase', ['product_id'], unique=False)
    op.create_index(op.f('ix_productpurchase_user_id'), 'productpurchase', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_productpurchase_user_id'), table_name='productpurchase')
    op.drop_index(op.f('ix_productpurchase_product_id'), table_name='productpurchase')
    op.drop_index(op.f('ix_productpurchase_extracted_data_id'), table_name='productpurchase')
    op.drop_table('productpurchase')
    op.drop_index(op.f('ix_productalias_product_id'), table_name='productalias')
    op.drop_index(op.f('ix_productalias_normalized_alias'), table_name='productalias')
    op.drop_index(op.f('ix_productalias_alias_name'), table_name='productalias')
    op.drop_table('productalias')
    op.drop_index(op.f('ix_product_normalized_name'), table_name='product')
    op.drop_index(op.f('ix_product_name'), table_name='product')
    op.drop_index(op.f('ix_product_barcode'), table_name='product')
    op.drop_table('product')
    # ### end Alembic commands ###
